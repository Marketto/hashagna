{"version":3,"file":"hashagna.mjs","sources":["../src/classes/serializator.class.ts","../src/classes/utils.class.ts","../src/classes/http-client.class.ts"],"sourcesContent":["import { ParamsType, ParamValueType } from '../types/params.type';\n\nexport default class HashagnaSerializator {\n    public static deserializeParams(serializedParams?: string): ParamsType {\n        return  (serializedParams || '')\n            .replace(/^(?:#|\\?)/, '').split('&')\n            .reduce((accumulator: ParamsType, keyValue: string) => {\n                const [key, value] = keyValue.split('=');\n                return {\n                    ...accumulator,\n                    [key.trim()]: this.deserializeValue(value),\n                };\n            }, {});\n    }\n\n    public static deserializeValue(serializedValue?: string): ParamValueType {\n        const trimmedSerializedValue = (serializedValue || '').trim();\n        if (trimmedSerializedValue === '') {\n            return null;\n        }\n        if ((/^(?:true|false)$/i).test(trimmedSerializedValue)) {\n            return (/^true$/i).test(trimmedSerializedValue);\n        }\n        if (trimmedSerializedValue === (parseFloat(trimmedSerializedValue)).toString()) {\n            return parseFloat(trimmedSerializedValue);\n        }\n        return trimmedSerializedValue;\n    }\n\n    public static serializeParams(deserializedParams?: ParamsType): string {\n        return Object.entries(deserializedParams || {})\n            .map(([key, value]) => `${key}=${this.serializeValue(value)}`)\n            .join('&');\n    }\n\n    public static serializeValue(deserializedValue?: ParamValueType): string {\n        if (deserializedValue === null || typeof deserializedValue === 'undefined') {\n            return '';\n        }\n        if (deserializedValue instanceof Date) {\n            return deserializedValue.toJSON();\n        }\n        if (['boolean', 'number', 'string'].includes(typeof deserializedValue)) {\n            return (deserializedValue).toString();\n        }\n        return '';\n    }\n}","import { LocationInfo, ParamsType } from '../types/params.type';\nimport HashagnaSerializator from './serializator.class';\n\nexport default class HashagnaUtils {\n    public static async newIframe(): Promise<HTMLIFrameElement> {\n        const id = this.newId();\n        const iframe = document.createElement('iframe');\n        iframe.setAttribute('style', 'display: none');\n        iframe.setAttribute('id', id);\n        window.document.body.appendChild(iframe);\n        return await this.isDomElementReady(() => document.getElementById(id) as HTMLIFrameElement | null)\n    }\n\n    public static async isDomElementReady<T extends HTMLElement | Window | Document>(getter: () => T | null): Promise<T> {\n        const target = getter();\n        if (!target) {\n            return await new Promise(resolve => window.requestAnimationFrame(() => this.isDomElementReady(getter).then(resolve)));\n        }\n        return target;\n    }\n\n    public static iframeListenerInjector(iFrame: HTMLIFrameElement): Promise<LocationInfo> {\n        return new Promise((resolve, reject) => {\n            iFrame.onload = async () => {\n                const contentWindow = await this.isDomElementReady(() => iFrame.contentWindow);\n                if (!contentWindow || !contentWindow.location || !contentWindow.location.hash) {\n                    return reject(new Error('No hash params found'));\n                }\n\n                const { hash, host, hostname, href, origin, pathname, port, protocol, search } = contentWindow.location;\n\n                return resolve({\n                    hash,\n                    hashParams: HashagnaSerializator.deserializeParams(hash),\n                    host,\n                    hostname,\n                    href,\n                    origin,\n                    pathname,\n                    protocol,\n                    search,\n                    port,\n                    query: HashagnaSerializator.deserializeParams(search),\n                });\n            };\n        });\n    }\n\n    private static newId(): string {\n        return Math.random().toString(36).substring(2);\n    }\n\n    public static async iFrameFormSubmit(iFrame: HTMLIFrameElement, url: string, params: ParamsType) {\n        // Retrieving iframe document\n        const iFrameDoc = await this.isDomElementReady(() => iFrame.contentDocument);\n        const iFrameDocElement =  await this.isDomElementReady(() => iFrameDoc.documentElement);\n\n        // Cleaning up the iFrame document\n        iFrameDocElement.innerHTML = '';\n        // Creating form\n        const consentForm = iFrameDoc.createElement('form');\n        // Form id\n        const id = this.newId();\n\n        Object.entries({\n            method: 'post',\n            action: url,\n            id,\n        }).forEach(([key, value]) => consentForm.setAttribute(key, value));\n\n        // Adding form input fields\n        Object.entries(params).forEach(([name, value]) => {\n            // Creating new input element\n            const input = iFrameDoc.createElement('input');\n            input.setAttribute('name', name);\n            input.setAttribute('value', HashagnaSerializator.serializeValue(value));\n            // Appending the input into the form\n            consentForm.appendChild(input);\n        });\n\n        // Appending composed form into the iFrame\n        iFrameDocElement.appendChild(consentForm);\n\n        // Waiting for DOM to be ready\n        await this.isDomElementReady(() => iFrameDoc.getElementById(id));\n        // Sending request by form submit\n        consentForm.submit();\n    }\n}","import { ParamsType, LocationInfo } from \"../types/params.type\";\nimport HashagnaUtils from './utils.class';\nimport HashagnaSerializator from \"./serializator.class\";\nimport HashagnaOptions from \"../interfaces/options.interface\";\n\nexport default class HashagnaHttpClient {\n\n    private static async getIFrame(iFrameId?: string): Promise<HTMLIFrameElement> {\n        if (iFrameId) {\n            return (await HashagnaUtils.isDomElementReady(() => document.getElementById(iFrameId))) as HTMLIFrameElement;\n        }\n        return await HashagnaUtils.newIframe();\n    }\n\n    private static async initIFrame(options?: HashagnaOptions) {\n        const iFrame: HTMLIFrameElement = (options && options.iFrame) || await this.getIFrame(options ? options.iFrameId : undefined);\n\n        const restoreDisabled = iFrame.hasAttribute('disabled');\n\n        if (restoreDisabled) {\n            iFrame.removeAttribute('disabled');\n        }\n\n        let finalCallback: () => void;\n        if (!(options && (options.iFrame || options.iFrameId))) {\n            finalCallback = () => iFrame.remove();\n        } else if (options && options.autoClean) {\n            finalCallback = () => {\n                if (restoreDisabled) {\n                    iFrame.setAttribute('disabled', '');\n                }\n                HashagnaUtils.isDomElementReady(() => iFrame.contentWindow &&\n                iFrame.contentWindow.document.getElementsByTagName('body')[0] as HTMLBodyElement)\n                    .then(iFrameBody => iFrameBody.innerHTML = '');\n            }\n        } else {\n            finalCallback = () => {\n                if (restoreDisabled) {\n                    iFrame.setAttribute('disabled', '');\n                }\n            };\n        }\n\n        const listener = HashagnaUtils.iframeListenerInjector(iFrame).finally(finalCallback);\n\n        return {\n            iFrame,\n            listener\n        };\n    }\n\n    public static async get(url: string, queryParams: ParamsType, options?: HashagnaOptions): Promise<LocationInfo> {\n        const { iFrame, listener } = await this.initIFrame(options);\n        iFrame.src = `${url}?${HashagnaSerializator.serializeParams(queryParams)}`;\n        return await listener;\n    }\n\n    public static async post(url: string, params: ParamsType, options?: HashagnaOptions): Promise<LocationInfo> {\n        const { iFrame, listener } = await this.initIFrame(options);\n        await HashagnaUtils.iFrameFormSubmit(iFrame, url, params);\n        return await listener;\n    }\n}\n"],"names":[],"mappings":"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"}
{"version":3,"file":"hashagna.mjs","sources":["../src/classes/hashagna-serializator.class.ts","../src/classes/hashagna-utils.class.ts","../src/classes/hashagna-http-client.class.ts"],"sourcesContent":["import { ParamsType, ParamValueType } from '../types/params.type';\n\nexport default class HashagnaSerializator {\n    public static deserializeParams(serializedParams?: string): ParamsType {\n        return  (serializedParams || '')\n            .replace(/^(?:#|\\?)/, '').split('&')\n            .reduce((accumulator: ParamsType, keyValue: string) => {\n                const [key, value] = keyValue.split('=');\n                return {\n                    ...accumulator,\n                    [key.trim()]: this.deserializeValue(value),\n                };\n            }, {});\n    }\n\n    private static deserializeValue(serializedValue?: string): ParamValueType {\n        const trimmedSerializedValue = (serializedValue || '').trim();\n        if (trimmedSerializedValue === '') {\n            return null;\n        }\n        if ((/^(?:true|false)$/i).test(trimmedSerializedValue)) {\n            return (/^true$/i).test(trimmedSerializedValue);\n        }\n        if (trimmedSerializedValue === (parseFloat(trimmedSerializedValue)).toString()) {\n            return parseFloat(trimmedSerializedValue);\n        }\n        return trimmedSerializedValue;\n    }\n\n    public static serializeParams(deserializedParams?: ParamsType): string {\n        return Object.entries(deserializedParams || {})\n            .map(([key, value]) => `${key}=${this.serializeValue(value)}`)\n            .join('&');\n    }\n\n    private static serializeValue(deserializedValue?: ParamValueType): string {\n        if (deserializedValue === null || typeof deserializedValue === 'undefined') {\n            return '';\n        }\n        if (['boolean', 'number', 'string'].includes(typeof deserializedValue)) {\n            return (deserializedValue).toString();\n        }\n        return '';\n    }\n}","import { LocationInfo } from '../types/params.type';\nimport HashagnaSerializator from './hashagna-serializator.class';\n\nexport default class HashagnaUtils {\n    public static async newIframe(): Promise<HTMLIFrameElement> {\n        const id = this.newId();\n        const iframe = document.createElement('iframe');\n        iframe.setAttribute('style', 'display: none');\n        iframe.setAttribute('id', id);\n        window.document.body.appendChild(iframe);\n        return await this.getIframe(id)\n    }\n\n    private static async getIframe(id: string): Promise<HTMLIFrameElement> {\n        const iFrame = document.getElementById(id) as HTMLIFrameElement;\n        if (!iFrame) {\n            return await new Promise(resolve => window.requestAnimationFrame(() => this.getIframe(id).then(resolve)));\n        }\n        return iFrame;\n    }\n\n    public static async iframeLoadedContentWindow(iFrame: HTMLIFrameElement): Promise<Window> {\n        if (!iFrame.contentWindow) {\n            return await new Promise(resolve => window.requestAnimationFrame(() => this.iframeLoadedContentWindow(iFrame).then(resolve)));\n        }\n        return iFrame.contentWindow;\n    }\n\n    public static iframeListenerInjector(iFrame: HTMLIFrameElement): Promise<LocationInfo> {\n        return new Promise((resolve, reject) => {\n            iFrame.onload = async () => {\n                const contentWindow = await this.iframeLoadedContentWindow(iFrame);\n                if (!contentWindow || !contentWindow.location || !contentWindow.location.hash) {\n                    return reject(new Error('No hash params found'));\n                }\n\n                const { hash, host, hostname, href, origin, pathname, port, protocol, search } = contentWindow.location;\n\n                return resolve({\n                    hash,\n                    hashParams: HashagnaSerializator.deserializeParams(hash),\n                    host,\n                    hostname,\n                    href,\n                    origin,\n                    pathname,\n                    protocol,\n                    search,\n                    port,\n                    query: HashagnaSerializator.deserializeParams(search),\n                });\n            };\n        });\n    }\n\n    private static newId(): string {\n        return Math.random().toString(36).substring(2);\n    }\n}","import { ParamsType, LocationInfo } from \"../types/params.type\";\nimport HashagnaUtils from './hashagna-utils.class';\nimport HashagnaSerializator from \"./hashagna-serializator.class\";\n\nexport default class HashagnaHttpClient {\n    public static async get(url: string, queryParams: ParamsType): Promise<LocationInfo> {\n        const iFrame = await HashagnaUtils.newIframe();\n        const hashListener = HashagnaUtils.iframeListenerInjector(iFrame);\n        iFrame.src = `${url}?${HashagnaSerializator.serializeParams(queryParams)}`;\n        return await hashListener;\n    }\n\n    /*\n    public post(url: string, params: ParamsType): Promise<UrlObject> {\n\n    }\n    */\n}\n"],"names":[],"mappings":";;;;;;MAEqB,oBAAoB;IAC9B,OAAO,iBAAiB,CAAC,gBAAyB;QACrD,OAAQ,CAAC,gBAAgB,IAAI,EAAE;aAC1B,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;aACnC,MAAM,CAAC,CAAC,WAAuB,EAAE,QAAgB;YAC9C,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzC,OAAO;gBACH,GAAG,WAAW;gBACd,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;aAC7C,CAAC;SACL,EAAE,EAAE,CAAC,CAAC;KACd;IAEO,OAAO,gBAAgB,CAAC,eAAwB;QACpD,MAAM,sBAAsB,GAAG,CAAC,eAAe,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;QAC9D,IAAI,sBAAsB,KAAK,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,sBAAsB,CAAC,EAAE;YACpD,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;SACnD;QACD,IAAI,sBAAsB,KAAK,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,EAAE;YAC5E,OAAO,UAAU,CAAC,sBAAsB,CAAC,CAAC;SAC7C;QACD,OAAO,sBAAsB,CAAC;KACjC;IAEM,OAAO,eAAe,CAAC,kBAA+B;QACzD,OAAO,MAAM,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC;aAC1C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;aAC7D,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;IAEO,OAAO,cAAc,CAAC,iBAAkC;QAC5D,IAAI,iBAAiB,KAAK,IAAI,IAAI,OAAO,iBAAiB,KAAK,WAAW,EAAE;YACxE,OAAO,EAAE,CAAC;SACb;QACD,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,iBAAiB,CAAC,EAAE;YACpE,OAAO,CAAC,iBAAiB,EAAE,QAAQ,EAAE,CAAC;SACzC;QACD,OAAO,EAAE,CAAC;KACb;;;MCxCgB,aAAa;IACvB,aAAa,SAAS;QACzB,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACxB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;QAC9C,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC9B,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACzC,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;KAClC;IAEO,aAAa,SAAS,CAAC,EAAU;QACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAsB,CAAC;QAChE,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC7G;QACD,OAAO,MAAM,CAAC;KACjB;IAEM,aAAa,yBAAyB,CAAC,MAAyB;QACnE,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YACvB,OAAO,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACjI;QACD,OAAO,MAAM,CAAC,aAAa,CAAC;KAC/B;IAEM,OAAO,sBAAsB,CAAC,MAAyB;QAC1D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YAC/B,MAAM,CAAC,MAAM,GAAG;gBACZ,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;gBACnE,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE;oBAC3E,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;iBACpD;gBAED,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,aAAa,CAAC,QAAQ,CAAC;gBAExG,OAAO,OAAO,CAAC;oBACX,IAAI;oBACJ,UAAU,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC;oBACxD,IAAI;oBACJ,QAAQ;oBACR,IAAI;oBACJ,MAAM;oBACN,QAAQ;oBACR,QAAQ;oBACR,MAAM;oBACN,IAAI;oBACJ,KAAK,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,MAAM,CAAC;iBACxD,CAAC,CAAC;aACN,CAAC;SACL,CAAC,CAAC;KACN;IAEO,OAAO,KAAK;QAChB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAClD;;;MCrDgB,kBAAkB;IAC5B,aAAa,GAAG,CAAC,GAAW,EAAE,WAAuB;QACxD,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,SAAS,EAAE,CAAC;QAC/C,MAAM,YAAY,GAAG,aAAa,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAClE,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,oBAAoB,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC;QAC3E,OAAO,MAAM,YAAY,CAAC;KAC7B;;;"}